version: '3.8'

services:

  logstash:
    build:
      context: ./logstash
    container_name: logstash
    volumes:
      - ./logs:/app/logs
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx
    networks:
      - app-network
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf

  service1:
    build:
      context: ./service1
    container_name: service1
    networks:
      - app-network
    ports:
      - "5001:5000"
    expose:
      - 5000
    volumes:
      - ./logs:/app/logs

  service2:
    build:
      context: ./service2
    container_name: service2
    networks:
      - app-network
    ports:
      - "5002:5000"
    expose:
      - 5000
    volumes:
      - ./logs:/app/logs

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.9
    container_name: filebeat
    command: filebeat -e -strict.perms=false
    volumes:
      - "/var/log:/var/log"
      - "./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml"
      - "/usr/share/filebeat/data"
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - app-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.9
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - app-network

  auth_service:
    build:
      context: ./auth_service
    container_name: auth_service
    ports:
      - "5003:5000"
    expose:
      - 5000
    networks:
      - app-network

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: flaskdb
    networks:
      - app-network

  database:
    build:
      context: ./database
    container_name: database
    depends_on:
      - mysql
    networks:
      - app-network
    ports:
      - "5004:5000"
    expose:
      - 5000

networks:
  app-network:
    driver: bridge
